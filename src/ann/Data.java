/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ann;

import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;

/**
 *
 * @author David
 */
public class Data extends javax.swing.JFrame {

    /**
     * Creates new form Data
     */
    private DefaultTableModel tbData;
    private DefaultTableModel tbPreprocessing;
    private int row;
    
    public Data() {
        initComponents();
        
        // Table Data
        tbData = new DefaultTableModel();
        
        tableData.setModel(tbData);
        tbData.addColumn("Tahun");
        tbData.addColumn("T-5");
        tbData.addColumn("T-4");
        tbData.addColumn("T-3");
        tbData.addColumn("T-2");
        tbData.addColumn("T-1");
        tbData.addColumn("Target");
        tbData.addColumn("Kategori");
        
        getAllData();
        
        // Table Preprocessing
        tbPreprocessing = new DefaultTableModel();
        
        tablePreprocessing.setModel(tbPreprocessing);
        tbPreprocessing.addColumn("Tahun");
        tbPreprocessing.addColumn("T-5");
        tbPreprocessing.addColumn("T-4");
        tbPreprocessing.addColumn("T-3");
        tbPreprocessing.addColumn("T-2");
        tbPreprocessing.addColumn("T-1");
        tbPreprocessing.addColumn("Target");
        tbPreprocessing.addColumn("Kategori");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        labelHeader = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        comboKategori = new javax.swing.JComboBox<>();
        textTahun = new javax.swing.JTextField();
        textT5 = new javax.swing.JTextField();
        textT4 = new javax.swing.JTextField();
        textT3 = new javax.swing.JTextField();
        textT2 = new javax.swing.JTextField();
        textT1 = new javax.swing.JTextField();
        textTarget = new javax.swing.JTextField();
        buttonHapus = new javax.swing.JButton();
        buttonSimpan = new javax.swing.JButton();
        buttonUbah = new javax.swing.JButton();
        buttonTambah = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        textFileName = new javax.swing.JTextField();
        buttonAddFile = new javax.swing.JButton();
        labelTitle1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboSort = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboScalling = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePreprocessing = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data IPM");
        setBackground(new java.awt.Color(44, 62, 80));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel3.setBackground(new java.awt.Color(0, 171, 169));

        labelHeader.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        labelHeader.setForeground(new java.awt.Color(255, 255, 255));
        labelHeader.setText("DATA IPM D.I. YOGYAKARTA");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelHeader)
                .addGap(286, 286, 286))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelHeader)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(0, 171, 169));

        labelTitle.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 255, 255));
        labelTitle.setText("Data Baru");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Kategori");

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tahun");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("T-5");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("T-4");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("T-3");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("T-2");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("T-1");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Target");

        comboKategori.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        comboKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Data Latih", "Data Uji" }));
        comboKategori.setToolTipText("Kategori Data");

        textTahun.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        textTahun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textTahunKeyTyped(evt);
            }
        });

        textT5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        textT5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textT5KeyTyped(evt);
            }
        });

        textT4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        textT4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textT4KeyTyped(evt);
            }
        });

        textT3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        textT3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textT3KeyTyped(evt);
            }
        });

        textT2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        textT2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textT2KeyTyped(evt);
            }
        });

        textT1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        textT1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textT1KeyTyped(evt);
            }
        });

        textTarget.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        textTarget.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textTargetKeyTyped(evt);
            }
        });

        buttonHapus.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        buttonHapus.setText("Hapus");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        buttonSimpan.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        buttonSimpan.setText("Simpan");
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });

        buttonUbah.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        buttonUbah.setText("Ubah");
        buttonUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUbahActionPerformed(evt);
            }
        });

        buttonTambah.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        buttonTambah.setText("Tambah Data");
        buttonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahActionPerformed(evt);
            }
        });

        buttonReset.setText("Reset");
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        textFileName.setEditable(false);

        buttonAddFile.setText("Tambah File");
        buttonAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddFileActionPerformed(evt);
            }
        });

        labelTitle1.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        labelTitle1.setForeground(new java.awt.Color(255, 255, 255));
        labelTitle1.setText("Import Data");

        jButton2.setText("Import");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(labelTitle))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonSimpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonUbah, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)))
                            .addComponent(jSeparator2)
                            .addComponent(textFileName)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(labelTitle1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel10))
                                            .addGap(37, 37, 37)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(comboKategori, 0, 137, Short.MAX_VALUE)
                                                .addComponent(textTahun)
                                                .addComponent(textT5)
                                                .addComponent(textT4)
                                                .addComponent(textT3)
                                                .addComponent(textT2)
                                                .addComponent(textT1)
                                                .addComponent(textTarget)))
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(buttonAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonTambah)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textT5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textT4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textT3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textT2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(textT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(textTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSimpan)
                    .addComponent(buttonUbah))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonReset)
                    .addComponent(buttonHapus))
                .addGap(12, 12, 12)
                .addComponent(labelTitle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddFile)
                    .addComponent(jButton2))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tableData.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableData);

        jPanel2.setBackground(new java.awt.Color(0, 171, 169));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tampil Berdasarkan");

        comboSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua Data", "Data Latih", "Data Uji" }));
        comboSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 171, 169));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Transformasi Data");

        comboScalling.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scalling[0.1]", "Scalling[-1.1]" }));
        comboScalling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboScallingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(comboScalling, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboScalling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tablePreprocessing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablePreprocessing);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed
        if(textTahun.getText().equals("") || textT5.getText().equals("") || textT4.getText().equals("") || textT3.getText().equals("") || textT2.getText().equals("") || textT1.getText().equals("") || textTarget.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Data tidak boleh kosong", "Peringatan", JOptionPane.ERROR_MESSAGE);
        } else {
            saveData();
        }
    }//GEN-LAST:event_buttonSimpanActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        int pilih = JOptionPane.showConfirmDialog(rootPane, "Apakah anda yakin ingin menghapus data?", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE);
        
        if (pilih == 0) {
            deleteData();
        }
    }//GEN-LAST:event_buttonHapusActionPerformed

    private void buttonUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUbahActionPerformed
        updateData();
    }//GEN-LAST:event_buttonUbahActionPerformed

    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
        if(evt.getClickCount()==1) {
            row = tableData.getSelectedRow();
            
            textTahun.setText(tableData.getValueAt(row, 0).toString());
            textT5.setText(tableData.getValueAt(row, 1).toString());
            textT4.setText(tableData.getValueAt(row, 2).toString());
            textT3.setText(tableData.getValueAt(row, 3).toString());
            textT2.setText(tableData.getValueAt(row, 4).toString());
            textT1.setText(tableData.getValueAt(row, 5).toString());
            textTarget.setText(tableData.getValueAt(row, 6).toString());
            comboKategori.setSelectedItem(tableData.getValueAt(row, 7).toString());
        }
    }//GEN-LAST:event_tableDataMouseClicked

    private void comboSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSortActionPerformed
        String kategori = (String) comboSort.getSelectedItem();
        
        if ("Semua Data".equals(kategori)) {
            getAllData();
        } else {
            getSelectedData(kategori);
        }
    }//GEN-LAST:event_comboSortActionPerformed

    private void buttonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahActionPerformed
        tambahData();
    }//GEN-LAST:event_buttonTambahActionPerformed

    private void comboScallingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboScallingActionPerformed
        String kategori = (String) comboSort.getSelectedItem();
        String scalling = (String) comboScalling.getSelectedItem();
        
        if ("Scalling[0.1]".equals(scalling)) {
            getPreprocessingBiner(kategori);
        } else if ("Scalling[-1.1]".equals(scalling)) {
            getPreprocessingBipolar(kategori);
        }
    }//GEN-LAST:event_comboScallingActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        resetField();
    }//GEN-LAST:event_buttonResetActionPerformed

    private void textTahunKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTahunKeyTyped
        char karakter = evt.getKeyChar();
        if (!((Character.isDigit(karakter)||(karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_textTahunKeyTyped

    private void textT5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textT5KeyTyped
        char karakter = evt.getKeyChar();
        if (!((Character.isDigit(karakter)||(karakter == KeyEvent.VK_PERIOD)||(karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_textT5KeyTyped

    private void textT4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textT4KeyTyped
        char karakter = evt.getKeyChar();
        if (!((Character.isDigit(karakter)||(karakter == KeyEvent.VK_PERIOD)||(karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_textT4KeyTyped

    private void textT3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textT3KeyTyped
        char karakter = evt.getKeyChar();
        if (!((Character.isDigit(karakter)||(karakter == KeyEvent.VK_PERIOD)||(karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_textT3KeyTyped

    private void textT2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textT2KeyTyped
        char karakter = evt.getKeyChar();
        if (!((Character.isDigit(karakter)||(karakter == KeyEvent.VK_PERIOD)||(karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_textT2KeyTyped

    private void textT1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textT1KeyTyped
        char karakter = evt.getKeyChar();
        if (!((Character.isDigit(karakter)||(karakter == KeyEvent.VK_PERIOD)||(karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_textT1KeyTyped

    private void textTargetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTargetKeyTyped
        char karakter = evt.getKeyChar();
        if (!((Character.isDigit(karakter)||(karakter == KeyEvent.VK_PERIOD)||(karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_textTargetKeyTyped

    private void buttonAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddFileActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String fileName = f.getName();
        textFileName.setText(fileName);
    }//GEN-LAST:event_buttonAddFileActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            readExcel();
        } catch (Exception ex) {
            Logger.getLogger(Data.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void getAllData() {
        tbData.getDataVector().removeAllElements();
        tbData.fireTableDataChanged();
        
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl = stm.executeQuery("select * from datas");
            
            while (rsl.next()) {
                Object[] obj = new Object[8];
                
                obj[0] = rsl.getString("tahun");
                obj[1] = rsl.getString("t5");
                obj[2] = rsl.getString("t4");
                obj[3] = rsl.getString("t3");
                obj[4] = rsl.getString("t2");
                obj[5] = rsl.getString("t1");
                obj[6] = rsl.getString("target");
                obj[7] = rsl.getString("kategori");
                
                tbData.addRow(obj);
            }
            
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal Menampilkan Data\n"+e.toString());
        }
    }
    
    private void getSelectedData(String kategori) {
        tbData.getDataVector().removeAllElements();
        tbData.fireTableDataChanged();
        
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl = stm.executeQuery("select * from datas where kategori = '"+kategori+"'");
            
            while (rsl.next()) {
                Object[] obj = new Object[8];
                
                obj[0] = rsl.getString("tahun");
                obj[1] = rsl.getString("t5");
                obj[2] = rsl.getString("t4");
                obj[3] = rsl.getString("t3");
                obj[4] = rsl.getString("t2");
                obj[5] = rsl.getString("t1");
                obj[6] = rsl.getString("target");
                obj[7] = rsl.getString("kategori");
                
                tbData.addRow(obj);
            }
            
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal Menampilkan Data\n"+e.toString());
        }
    }
    
    private void getPreprocessingBiner(String kategori) {
        tbPreprocessing.getDataVector().removeAllElements();
        tbPreprocessing.fireTableDataChanged();
        
        DecimalFormat df = new DecimalFormat("#.##");
        Helper helper = new Helper();
        int countRecords = helper.countRecords();
        
        double xNorm[][] = new double[50][50];
        double xTemp[][] = new double[50][50];
        double t5[] = new double[50];
        double t4[] = new double[50];
        double t3[] = new double[50];
        double t2[] = new double[50];
        double t1[] = new double[50];
        double target[] = new double[50];
        int count = 0;
        
        // for minmax
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl = stm.executeQuery("select * from datas");;
            
            while (rsl.next()) {
                xTemp[count][0] = rsl.getDouble("t5");
                xTemp[count][1] = rsl.getDouble("t4");
                xTemp[count][2] = rsl.getDouble("t3");
                xTemp[count][3] = rsl.getDouble("t2");
                xTemp[count][4] = rsl.getDouble("t1");
                xTemp[count][5] = rsl.getDouble("target");
                count++;
            }
        
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            System.out.println("Gagal mengambil data\n"+e);
        }
        
        double nilaiMin = helper.nilaiMin(xTemp, countRecords);
        double nilaiMax = helper.nilaiMax(xTemp, countRecords);
        
        // load data from database
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl;
            if ("Semua Data".equals(kategori)) {
                rsl = stm.executeQuery("select * from datas");
            } else {
                rsl = stm.executeQuery("select * from datas where kategori = '"+kategori+"'");
            }
            
            while (rsl.next()) {
                xNorm[count][0] = rsl.getDouble("t5");
                xNorm[count][1] = rsl.getDouble("t4");
                xNorm[count][2] = rsl.getDouble("t3");
                xNorm[count][3] = rsl.getDouble("t2");
                xNorm[count][4] = rsl.getDouble("t1");
                xNorm[count][5] = rsl.getDouble("target");
                count++;
            }
        
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            System.out.println("Gagal mengambil data\n"+e);
        }
        
        // scalling data
        
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl;
            if ("Semua Data".equals(kategori)) {
                rsl = stm.executeQuery("select * from datas");
            } else {
                rsl = stm.executeQuery("select * from datas where kategori = '"+kategori+"'");
            }
            
            while (rsl.next()) {
                Object[] obj = new Object[8];

                t5[count] = ((rsl.getDouble("t5")-nilaiMin)*(1-0)/(nilaiMax-nilaiMin))-0;
                t4[count] = ((rsl.getDouble("t4")-nilaiMin)*(1-0)/(nilaiMax-nilaiMin))-0;
                t3[count] = ((rsl.getDouble("t3")-nilaiMin)*(1-0)/(nilaiMax-nilaiMin))-0;
                t2[count] = ((rsl.getDouble("t2")-nilaiMin)*(1-0)/(nilaiMax-nilaiMin))-0;
                t1[count] = ((rsl.getDouble("t1")-nilaiMin)*(1-0)/(nilaiMax-nilaiMin))-0;
                target[count] = ((rsl.getDouble("target")-nilaiMin)*(1-0)/(nilaiMax-nilaiMin))-0;
                
                obj[0] = rsl.getString("tahun");
                obj[1] = df.format(t5[count]);
                obj[2] = df.format(t4[count]);
                obj[3] = df.format(t3[count]);
                obj[4] = df.format(t2[count]);
                obj[5] = df.format(t1[count]);
                obj[6] = df.format(target[count]);
                obj[7] = rsl.getString("kategori");
                
                tbPreprocessing.addRow(obj);
                count++;
            }
            
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal Menampilkan Data\n"+e.toString());
        }
    }
    
    private void getPreprocessingBipolar(String kategori) {
        tbPreprocessing.getDataVector().removeAllElements();
        tbPreprocessing.fireTableDataChanged();
        
        DecimalFormat df = new DecimalFormat("#.##");
        Helper helper = new Helper();
        int countRecords = helper.countRecords();
        double xNorm[][] = new double[50][50];
        double xTemp[][] = new double[50][50];
        double t5[] = new double[50];
        double t4[] = new double[50];
        double t3[] = new double[50];
        double t2[] = new double[50];
        double t1[] = new double[50];
        double target[] = new double[50];
        int count = 0;
        
        // for minmax
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl = stm.executeQuery("select * from datas");;
            
            while (rsl.next()) {
                xTemp[count][0] = rsl.getDouble("t5");
                xTemp[count][1] = rsl.getDouble("t4");
                xTemp[count][2] = rsl.getDouble("t3");
                xTemp[count][3] = rsl.getDouble("t2");
                xTemp[count][4] = rsl.getDouble("t1");
                xTemp[count][5] = rsl.getDouble("target");
                count++;
            }
        
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            System.out.println("Gagal mengambil data\n"+e);
        }
        
        double nilaiMin = helper.nilaiMin(xTemp, countRecords);
        double nilaiMax = helper.nilaiMax(xTemp, countRecords);
        
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl;
            if ("Semua Data".equals(kategori)) {
                rsl = stm.executeQuery("select * from datas");
            } else {
                rsl = stm.executeQuery("select * from datas where kategori = '"+kategori+"'");
            }
            
            while (rsl.next()) {
                xNorm[count][0] = rsl.getDouble("t5");
                xNorm[count][1] = rsl.getDouble("t4");
                xNorm[count][2] = rsl.getDouble("t3");
                xNorm[count][3] = rsl.getDouble("t2");
                xNorm[count][4] = rsl.getDouble("t1");
                xNorm[count][5] = rsl.getDouble("target");
                count++;
            }
        
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            System.out.println("Gagal mengambil data\n"+e);
        }
        
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl;
            if ("Semua Data".equals(kategori)) {
                rsl = stm.executeQuery("select * from datas");
            } else {
                rsl = stm.executeQuery("select * from datas where kategori = '"+kategori+"'");
            }
            
            while (rsl.next()) {
                Object[] obj = new Object[8];

                t5[count] = ((rsl.getDouble("t5")-nilaiMin)*(1-(-1))/(nilaiMax-nilaiMin))-1;
                t4[count] = ((rsl.getDouble("t4")-nilaiMin)*(1-(-1))/(nilaiMax-nilaiMin))-1;
                t3[count] = ((rsl.getDouble("t3")-nilaiMin)*(1-(-1))/(nilaiMax-nilaiMin))-1;
                t2[count] = ((rsl.getDouble("t2")-nilaiMin)*(1-(-1))/(nilaiMax-nilaiMin))-1;
                t1[count] = ((rsl.getDouble("t1")-nilaiMin)*(1-(-1))/(nilaiMax-nilaiMin))-1;
                target[count] = ((rsl.getDouble("target")-nilaiMin)*(1-(-1))/(nilaiMax-nilaiMin))-1;
                
                obj[0] = rsl.getString("tahun");
                obj[1] = df.format(t5[count]);
                obj[2] = df.format(t4[count]);
                obj[3] = df.format(t3[count]);
                obj[4] = df.format(t2[count]);
                obj[5] = df.format(t1[count]);
                obj[6] = df.format(target[count]);
                obj[7] = rsl.getString("kategori");
                
                tbPreprocessing.addRow(obj);
                count++;
            }
            
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal Menampilkan Data\n"+e.toString());
        }
    }
    
    private void resetField() {
        textTahun.setText("");
        textT1.setText("");
        textT2.setText("");
        textT3.setText("");
        textT4.setText("");
        textT5.setText("");
        textTarget.setText("");
    }
    
    private void saveData() {
        String tahun = textTahun.getText();
        double t5 = Double.parseDouble(textT5.getText());
        double t4 = Double.parseDouble(textT4.getText());
        double t3 = Double.parseDouble(textT3.getText());
        double t2 = Double.parseDouble(textT2.getText());
        double t1 = Double.parseDouble(textT1.getText());
        double t = Double.parseDouble(textTarget.getText());
        String kategori = (String) comboKategori.getSelectedItem();
        
        try {
            Statement stm;
            stm = Connect.getConn().createStatement();
            stm.executeUpdate("insert into datas values('"+
                    tahun+"','"+t5+"','"+t4+"','"+t3+"','"+t2+"','"+t1+"','"+t+"','"+kategori+"')");
            stm.close();
            JOptionPane.showMessageDialog(rootPane, "Data tahun "+tahun+" berhasil disimpan");
            getAllData();
            resetField();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Data sudah ada");
        }
    }
    
    private void updateData() {
        String tahun = textTahun.getText();
        double t5 = Double.parseDouble(textT5.getText());
        double t4 = Double.parseDouble(textT4.getText());
        double t3 = Double.parseDouble(textT3.getText());
        double t2 = Double.parseDouble(textT2.getText());
        double t1 = Double.parseDouble(textT1.getText());
        double t = Double.parseDouble(textTarget.getText());
        String kategori = (String) comboKategori.getSelectedItem();
        
        try {
            Statement stm;
            stm = Connect.getConn().createStatement();
            
            stm.executeUpdate("update datas set t5 = '"+t5+"',t4 = '"+t4+"',t3 = '"+
                    t3+"',t2 = '"+t2+"',t1 = '"+t1+"',target = '"+t+"',kategori = '"+kategori+
                    "' where tahun = '"+tahun+"'");
            
            Object[] obj = new Object[8];
            
            obj[0]=textTahun.getText();
            obj[1]=textT1.getText();
            obj[2]=textT2.getText();
            obj[3]=textT3.getText();
            obj[4]=textT2.getText();
            obj[5]=textT1.getText();
            obj[6]=textTarget.getText();
            obj[7]=comboKategori.getSelectedItem();
            
            tbData.removeRow(row);
            tbData.insertRow(row, obj);
            
            stm.close();
            JOptionPane.showMessageDialog(rootPane, "Data tahun "+tahun+" berhasil diubah");
            resetField();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Data Gagal Diubah\n"+e.toString());
        }
    }
    
    private void deleteData() {
        String tahun = String.valueOf(tableData.getValueAt(tableData.getSelectedRow(), 0));
        
        try {
            Statement stm;
            stm = Connect.getConn().createStatement();
            stm.executeUpdate("delete from datas where tahun = '"+tahun+"'");
            stm.close();
            JOptionPane.showMessageDialog(rootPane, "Data tahun "+tahun+" berhasil dihapus");
            getAllData();
            resetField();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal Dihapus\n"+e.toString());
        }
    }
    
    private void tambahData() {
        try {
            Statement stm = Connect.getConn().createStatement();
            ResultSet rsl = stm.executeQuery("select * from datas ORDER by tahun DESC LIMIT 0, 1");
            
            while (rsl.next()) {
                textT1.setText(rsl.getString("target"));
                textT2.setText(rsl.getString("t1"));
                textT3.setText(rsl.getString("t2"));
                textT4.setText(rsl.getString("t3"));
                textT5.setText(rsl.getString("t4"));
                
                int tahun_data = 1 + rsl.getInt("tahun");
                textTahun.setText(""+tahun_data);
            }
            
            rsl.close();
            stm.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal Menampilkan Data\n"+e.toString());
        }
    }
    
    private void readExcel() throws Exception{
        String fileName = textFileName.getText();
        File f = new File("D:/bobot/Data/"+fileName);
        
        Workbook wb = Workbook.getWorkbook(f);
        Sheet s = wb.getSheet(0);
        int row = s.getRows();
        int col = s.getColumns();
        double data = 0;
        String kategori = "";
        
        double[] arr = new double[50];
        double[] arr_new = new double[50];
        
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                Cell c = s.getCell(j, i);
                // System.out.println(c.getContents());
                data = Double.parseDouble(c.getContents());

                if(data < 100){
                   arr[j] = data;
                }
                
                // System.out.println(arr[j]);
            }
        }
        
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] != 0){
                arr_new[i] = arr[i];
            }
        }

        int tahun_awal = 2001;
        int tahun[] = new int[20];
        double[] arr_1 = new double[50];
        double[] arr_2 = new double[50];
        double[] arr_3 = new double[50];
        double[] arr_4 = new double[50];
        double[] arr_5 = new double[50];
        double[] arr_6 = new double[50];
        
        for (int i = 0; i < 16; i++) {
            arr_1[i] = arr_new[0+i];
            arr_2[i] = arr_new[1+i];
            arr_3[i] = arr_new[2+i];
            arr_4[i] = arr_new[3+i];
            arr_5[i] = arr_new[4+i];
            arr_6[i] = arr_new[5+i];
            tahun[i] = tahun_awal + i;
        }
        
        try {
            Statement stm;
            stm = Connect.getConn().createStatement();
            
            for (int i = 0; i < 16; i++) {
                if (i <= 12) {
                    kategori = "Data Latih";
                } else {
                    kategori = "Data Uji";
                }
                stm.executeUpdate("insert into datas values('"+
                    tahun[i]+"','"+arr_1[i]+"','"+arr_2[i]+"','"+arr_3[i]+"','"+arr_4[i]+"','"+arr_5[i]+"','"+arr_6[i]+"','"+kategori+"')");
            }
            
            stm.close();
            getAllData();
            resetField();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
        
        for (int i = 0; i < 16; i++) {
            // System.out.println(arr_1[i]+" "+arr_2[i]+" "+arr_3[i]+" "+arr_4[i]+" "+arr_5[i]+" "+arr_6[i]+" "+kategori);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Data().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddFile;
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSimpan;
    private javax.swing.JButton buttonTambah;
    private javax.swing.JButton buttonUbah;
    private javax.swing.JComboBox<String> comboKategori;
    private javax.swing.JComboBox<String> comboScalling;
    private javax.swing.JComboBox<String> comboSort;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelHeader;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelTitle1;
    private javax.swing.JTable tableData;
    private javax.swing.JTable tablePreprocessing;
    private javax.swing.JTextField textFileName;
    private javax.swing.JTextField textT1;
    private javax.swing.JTextField textT2;
    private javax.swing.JTextField textT3;
    private javax.swing.JTextField textT4;
    private javax.swing.JTextField textT5;
    private javax.swing.JTextField textTahun;
    private javax.swing.JTextField textTarget;
    // End of variables declaration//GEN-END:variables
}
